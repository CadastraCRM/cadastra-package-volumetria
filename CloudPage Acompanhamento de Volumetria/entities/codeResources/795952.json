{"issues":[],"originID":"795952","originEID":"mcxwlsp6p8x6296tw57v3kht-t24","data":{"code":"document.addEventListener('DOMContentLoaded', () => {\n\n    // Seleciona os elementos da tabela\n    const disponivelElements = [...document.querySelectorAll('.table-disponivel p')];\n    const percentualElements = [...document.querySelectorAll('.table-percentual p')];\n\n    // Lógica para alterar as cores com base no consumido\n    percentualElements.forEach((el, idx) => {\n        // Remove o % e converte para número\n        const taxa = parseFloat(el.textContent.replace('%', ''));\n\n        // Verifica se é maior que 70%\n        if (taxa > 70) {\n            disponivelElements[idx].style.color = '#ff0000';\n            el.style.color = '#ff0000';\n        }\n    });\n\n\n    // Lógica coluna taxa de referência\n    const contractStartDate = new Date('2025-04-26');\n    const contractEndDate = new Date('2026-04-25');\n\n    // Data atual\n    const currentDate = new Date();\n    let monthsElapsed = 0\n\n    // Calcula o total de meses de contrato\n    const totalMonths = (contractEndDate.getFullYear() - contractStartDate.getFullYear()) * 12 + (contractEndDate.getMonth() - contractStartDate.getMonth()) + 1;\n\n    // Calcula meses decorridos até o momento\n    if (currentDate >= contractStartDate && currentDate <= contractEndDate) {\n        monthsElapsed = (currentDate.getFullYear() - contractStartDate.getFullYear()) * 12 + (currentDate.getMonth() - contractStartDate.getMonth()) + 1;\n    } else if (currentDate > contractEndDate) {\n        monthsElapsed = totalMonths;\n    }\n\n    //Seleciona a coluna da taxa de referência\n\n    const supermessagesEsperado = document.getElementById('supermessages-expected');\n    const smsEsperado = document.getElementById('sms-expected');\n    const whatsEsperado = document.getElementById('whatsapp-expected');\n\n    supermessagesEsperado.textContent = `${((monthsElapsed / totalMonths) * 100).toFixed(2)}%`;\n    smsEsperado.textContent = `${((monthsElapsed / totalMonths) * 100).toFixed(2)}%`;\n    whatsEsperado.textContent = `${((monthsElapsed / totalMonths) * 100).toFixed(2)}%`;\n\n});","categoryId":"{{mcpm#/entities/cloudPageCollections/160658/data/id}}","contentType":"application/javascript","cultureCode":"en-US","description":"","domain":"{{mcpm:cloudPages-domain}}","key":"js-Acompanhamento-Volumetria","name":"JS LP Acompanhamento Volumetria Bridgestone","requiresSsl":true,"url":"https://cloud.e.bridgestone.com.br/js-Acompanhamento-Volumetria","asset":{"assetType":{"id":240,"name":"jscoderesource","displayName":"Javascript Code Resource"},"customerKey":"ca9c261c-126d-466c-8b46-17b725da37cf","data":{"site":{"content":"{\"url\":\"https://cloud.e.bridgestone.com.br/js-Acompanhamento-Volumetria\"}"}},"description":"","name":"JS LP Acompanhamento Volumetria Bridgestone","category":{"id":"{{mcpm#/entities/categories/160658/data/id}}","name":"LP Acompanhamento de Volumetria Bridgestone","parentId":118931},"content":"document.addEventListener('DOMContentLoaded', () => {\n\n    // Seleciona os elementos da tabela\n    const disponivelElements = [...document.querySelectorAll('.table-disponivel p')];\n    const percentualElements = [...document.querySelectorAll('.table-percentual p')];\n\n    // Lógica para alterar as cores com base no consumido\n    percentualElements.forEach((el, idx) => {\n        // Remove o % e converte para número\n        const taxa = parseFloat(el.textContent.replace('%', ''));\n\n        // Verifica se é maior que 70%\n        if (taxa > 70) {\n            disponivelElements[idx].style.color = '#ff0000';\n            el.style.color = '#ff0000';\n        }\n    });\n\n\n    // Lógica coluna taxa de referência\n    const contractStartDate = new Date('2025-04-26');\n    const contractEndDate = new Date('2026-04-25');\n\n    // Data atual\n    const currentDate = new Date();\n    let monthsElapsed = 0\n\n    // Calcula o total de meses de contrato\n    const totalMonths = (contractEndDate.getFullYear() - contractStartDate.getFullYear()) * 12 + (contractEndDate.getMonth() - contractStartDate.getMonth()) + 1;\n\n    // Calcula meses decorridos até o momento\n    if (currentDate >= contractStartDate && currentDate <= contractEndDate) {\n        monthsElapsed = (currentDate.getFullYear() - contractStartDate.getFullYear()) * 12 + (currentDate.getMonth() - contractStartDate.getMonth()) + 1;\n    } else if (currentDate > contractEndDate) {\n        monthsElapsed = totalMonths;\n    }\n\n    //Seleciona a coluna da taxa de referência\n\n    const supermessagesEsperado = document.getElementById('supermessages-expected');\n    const smsEsperado = document.getElementById('sms-expected');\n    const whatsEsperado = document.getElementById('whatsapp-expected');\n\n    supermessagesEsperado.textContent = `${((monthsElapsed / totalMonths) * 100).toFixed(2)}%`;\n    smsEsperado.textContent = `${((monthsElapsed / totalMonths) * 100).toFixed(2)}%`;\n    whatsEsperado.textContent = `${((monthsElapsed / totalMonths) * 100).toFixed(2)}%`;\n\n});","contentType":"application/javascript","meta":{"cloudPages":{"publishDate":"2025-07-21 18:03:13.620"}}}}}