{"issues":[],"originID":"1c1acf13-adb1-4e91-8400-1a47425fc44e","originEID":"mcxwlsp6p8x6296tw57v3kht-t24","data":{"categoryId":"{{mcpm#/entities/categories/15090/data/id}}","description":"","key":"20a2cd7f-237e-45ac-b35a-fbe935988f82","name":"Trigger_Email_Automation","script":"<script runat=\"server\">\r\nPlatform.Load(\"core\", \"1.1.1\");\r\ntry {\r\n\r\n    //Seta automação para trigger\r\n\r\n    var automationCustomerKey = \"e5c58b43-ff7c-8a28-c80a-e87a0dc211c2\";\r\n\r\n    var rr = Platform.Function.CreateObject(\"RetrieveRequest\");\r\n\r\n    Platform.Function.SetObjectProperty(rr, \"ObjectType\", \"Automation\");\r\n    Platform.Function.AddObjectArrayItem(rr, \"Properties\", \"ProgramID\");\r\n    Platform.Function.AddObjectArrayItem(rr, \"Properties\", \"CustomerKey\");\r\n    Platform.Function.AddObjectArrayItem(rr, \"Properties\", \"Status\");\r\n\r\n    var sfp = Platform.Function.CreateObject(\"SimpleFilterPart\");\r\n    Platform.Function.SetObjectProperty(sfp, \"Property\", \"CustomerKey\");\r\n    Platform.Function.SetObjectProperty(sfp, \"SimpleOperator\", \"equals\");\r\n    Platform.Function.AddObjectArrayItem(sfp, \"Value\", automationCustomerKey);\r\n\r\n    Platform.Function.SetObjectProperty(rr, \"Filter\", sfp);\r\n\r\n    var retrieveStatus = [0, 0, 0];\r\n\r\n    var automationResultSet = Platform.Function.InvokeRetrieve(rr, retrieveStatus);\r\n\r\n    var ObjectID = automationResultSet[0][\"ObjectID\"];\r\n    var Status = automationResultSet[0][\"Status\"];\r\n\r\n\r\n    var obj = Platform.Function.CreateObject(\"Automation\");\r\n    Platform.Function.SetObjectProperty(obj, \"ObjectID\", ObjectID);\r\n    var po = Platform.Function.CreateObject(\"PerformOptions\");\r\n\r\n    var performResult = [0, 0, 0];\r\n\r\n\r\n    // Recupera volumetria atual da Data Extension DE_Volumetria_Total\r\n    var customerKey = \"9026E415-365F-43D3-8700-8DB1790B4D8C\";\r\n    var de = DataExtension.Init(customerKey);\r\n\r\n    // Consulta o registro onde o ano é 2025\r\n    var registros = de.Rows.Retrieve({\r\n        Property: \"Ano\",\r\n        SimpleOperator: \"equals\",\r\n        Value: \"2025\"\r\n    });\r\n\r\n    // Busca Data atual\r\n    var currentDate = new Date();\r\n\r\n\r\n    //Seta o total contratado para cada serviço\r\n    var totalContratado = {\r\n        Supermessages: 10000000,\r\n        SMS: 1501000,\r\n        Whatsapp: 7560000,\r\n        Contatos: 400000\r\n    }\r\n\r\n\r\n    // Recupera o total consumido atual e data de envio de ultimo email enviado\r\n    var consumidoSupermessages = parseFloat(registros[0].totalSupermessages);\r\n    var consumidoSMS = parseFloat(registros[0].totalSMS);\r\n    var consumidoWhatsapp = parseFloat(registros[0].totalWhatsapp);\r\n    var consumidoContatos = parseFloat(registros[0].totalContatos);\r\n    var lastEmailSent = registros[0].lastEmailSent;\r\n\r\n    //Cálculo de taxas\r\n    var percentualSuper = (consumidoSupermessages / parseFloat(totalContratado.Supermessages)) * 100;\r\n    var percentualSMS = (consumidoSMS / parseFloat(totalContratado.SMS)) * 100;\r\n    var percentualWhats = (consumidoWhatsapp / parseFloat(totalContratado.Whatsapp)) * 100;\r\n    var percentualContatos = (consumidoContatos / parseFloat(totalContratado.Contatos)) * 100;\r\n\r\n    //Verifica se um email já foi enviado\r\n\r\n    if (!lastEmailSent) {\r\n\r\n        // Verificar se o total consumido é maior que o contratado\r\n        if (percentualSuper >= 70 || percentualSMS >= 70 || percentualWhats >= 70 || percentualContatos >= 70) {\r\n\r\n            // Ativa automação de envio de email de alerta\r\n            var performStatus = Platform.Function.InvokePerform(obj, \"start\", performResult, po);\r\n\r\n            //Atualiza campo emailDate \r\n            var updateEmailData = de.Rows.Update(\r\n                {\r\n                    lastEmailSent: currentDate\r\n                },\r\n                ['Ano'],\r\n                ['2025']\r\n            )\r\n\r\n            Write('Alerta enviado!')\r\n\r\n        } else {\r\n            Write(\"Nenhuma taxa excedeu o limite. Alerta não enviado.\");\r\n        }\r\n    } else {\r\n        Write(\"Email de alerta já enviado!\")\r\n    }\r\n\r\n} catch (error) {\r\n    // Capturar e exibir erros\r\n    Write(\"Erro ao ativar a automação: \" + Stringify(error));\r\n}\r\n</script>"}}